- name: catalogue 
  hosts: catalogue
  become: yes
  tasks:
  - name: disable and enable node-js
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

  - name: install node-js
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: create a roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: create a app directory
    ansible.builtin.file:
      path: /app          
      state: directory

  - name: Download the application code
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: unzip the content
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install npm
    ansible.builtin.package:
      name: npm
      state: present

  - name: copy catalogue service file
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service    

  - name: reload the daemon
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: enable and restart the catalogue
    ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: yes

  - name: copy mongo repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present

  - name: get the categories count
    ansible.builtin.command:  mongo --host mongodb.jaya123.shop --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
    register: product_count

  - name: print the count
    ansible.builtin.debug:
      msg: "product count: {{product_count}}"

  - name: load catalog data
    ansible.builtin.command: mongo --host  mongodb.jaya123.shop < /app/schema/catalogue.js
    when: product_count.stdout == 0

  - name: enable and restart the catalogue
    ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: yes